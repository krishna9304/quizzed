services:
  live:
    container_name: live
    build:
      context: .
      dockerfile: ./apps/live/Dockerfile
      target: development
    command: npm run start:dev live
    env_file:
      - ./apps/live/.env
    depends_on:
      - mongodb
      - rabbitmq
      - auth
      - quiz
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  quiz:
    container_name: quiz
    build:
      context: .
      dockerfile: ./apps/quiz/Dockerfile
      target: development
    command: npm run start:dev quiz
    env_file:
      - ./apps/quiz/.env
    depends_on:
      - mongodb
      - rabbitmq
      - auth
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '8000:8000'

  auth:
    container_name: auth
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    env_file:
      - ./apps/auth/.env
    depends_on:
      - mongodb
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '8001:8001'

  mailer:
    container_name: mailer
    build:
      context: .
      dockerfile: ./apps/mailer/Dockerfile
      target: development
    command: npm run start:dev mailer
    env_file:
      - ./apps/mailer/.env
    depends_on:
      - mongodb
      - rabbitmq
      - auth
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq
    ports:
      - '5672:5672'

  mongodb:
    image: mongo
    container_name: mongo-primary
    ports:
      - '27017:27017'
    volumes:
      - mongodb_master_data:/data/db

volumes:
  mongodb_master_data:
    driver: local
